@page "/LagBrukerPage"
@using PDSA_System.Shared.Models
@inject HttpClient Http
@inject NavigationManager NavigationManager


<h3>Opprett bruker</h3>



<form>
  <div class="form-group">
    <label for="formGroupExampleInput">AnsattNr</label>
    <input type="number" @bind="_bruker.AnsattNr" class="form-control" id="formGroupExampleInput" placeholder="AnsattNr">
  </div>
  <div>
    <label for="formGroupExampleInput">Fornavn</label>
    <input type="text" @bind="_bruker.Fornavn" class="form-control" id="formGroupExampleInput" placeholder="Fornavn">
  </div>
  <div>
     <label for="formGroupExampleInput">Etternavn</label>
    <input type="text" @bind="_bruker.Etternavn" class="form-control" id="formGroupExampleInput" placeholder="Etternavn">
  </div>
  <div>
     <label for="formGroupExampleInput">Email</label>
    <input type="text" @bind="_bruker.Email" class="form-control" id="formGroupExampleInput" placeholder="Email">
  </div>
  <div>
     <label for="formGroupExampleInput">PassordHash</label>
    <input type="text" @bind="_bruker.PassordHash" class="form-control" id="formGroupExampleInput" placeholder="PassordHash">
  </div>
  <div>
     <label for="formGroupExampleInput">Rolle</label>
    <input type="text" @bind="_bruker.Rolle" class="form-control" id="formGroupExampleInput" placeholder="Rolle">
  </div>
  <div>
     <label for="formGroupExampleInput">LederId</label>
    <input type="number" @bind="_bruker.LederId" class="form-control" id="formGroupExampleInput" placeholder="LederId">
  </div>
 @* <div>
     <label for="formGroupExampleInput">Opprettet</label>
    <input type="datetime" @bind="_bruker.Opprettet" class="form-control" id="formGroupExampleInput" placeholder="Opprettet">
  </div>*@
</form>
<button type="button" class="btn btn-success" @onclick="AddItem">Lag bruker</button>


@code {
    private Bruker _bruker = new Bruker();

    // make the button route back to the admin page after adding a new user

    private async Task AddItem()
    {
        var LagBruker = new { Name = _bruker, IsComplete = false };
        await Http.PostAsJsonAsync("/api/Bruker/createBruker", _bruker);
        NavigationManager.NavigateTo("/admin");
    }
  }
    

   

