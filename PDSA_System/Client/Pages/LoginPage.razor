@page "/Login";
@using PDSA_System.Client.Models
@inject HttpClient HttpClient
@inject IJSRuntime JsRuntime

<h3>Login</h3>

<EditForm Model=@_data OnSubmit=@FormSubmitted>
	<DataAnnotationsValidator />
	<!--<TextInput BindValue="@_data.Brukernavn" id="usernameInput" name="usernameInput" label="Epostadresse" type="text"/>-->
	<label for="epostInput">Epostadresse: </label>
	<input type="text" class="form-control" id="epostInput" name="epostInput" @bind-value="@_data.Brukernavn" placeholder="Epostadresse" />

	<!--<TextInput BindValue="@_data.Passord" id="passwordInput" name="passwordInput" label="Passord" type="password"/>-->
	<label for="passwordInput">Passord: </label>
	<input type="password" name="passwordInput" id="passwordInput" @bind-value="@_data.Passord" class="form-control" placeholder="Passord" />


	<SubmitInput />

</EditForm>

@code {
	LoginData _data = new LoginData();

	private async void CreateCookie(string name, string value, int days)
	{
		var test = await JsRuntime.InvokeAsync<string>("methods.CreateCookie", name, value, days);
	}

	void FormSubmitted(EditContext editContext)
	{
		bool formIsValid = editContext.Validate();
		Console.WriteLine(_data.Brukernavn + " " + _data.Passord + " " + formIsValid);

		HttpClient.PostAsJsonAsync("/auth/login", _data).ContinueWith(task =>
		{
			if (task.Result.IsSuccessStatusCode)
			{
				Console.WriteLine("Success");
				var token = task.Result.Content.ReadAsStringAsync().Result;

				CreateCookie("authentication", token, 1);
			}
			else
			{
				Console.WriteLine("Failed");
			}
		});
	}

}
